version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: asset_db
    environment:
      POSTGRES_DB: ${DB_NAME:-asset_management}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres123}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./database/seed_data.sql:/docker-entrypoint-initdb.d/02-seed.sql
    networks:
      - asset_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-asset_management}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: asset_backend
    environment:
      - DATABASE_URL=postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-postgres123}@database:5432/${DB_NAME:-asset_management}
      - SECRET_KEY=${SECRET_KEY:-your-super-secret-key-change-in-production}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      - ALGORITHM=${ALGORITHM:-HS256}
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000,http://127.0.0.1:3000}
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - asset_network
    volumes:
      - ./backend:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_URL=${REACT_APP_API_URL:-http://localhost:8000}
    container_name: asset_frontend
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL:-http://localhost:8000}
      - GENERATE_SOURCEMAP=${GENERATE_SOURCEMAP:-false}
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    depends_on:
      - backend
    networks:
      - asset_network
    volumes:
      - ./frontend:/app
      - /app/node_modules
    stdin_open: true
    tty: true
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  asset_network:
    driver: bridge